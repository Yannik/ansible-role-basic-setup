- name: Run apt-get update if the last one is more then 1 day ago
  apt: update_cache=yes cache_valid_time=86400
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install vim,htop,curl,traceroute,dnsutils,ncdu,git,p7zip,screen,tmux,sudo
  package:
    name:
      - vim
      - htop
      - curl
      - traceroute
      - dnsutils #dig,nslookup,nsupdate
      - ncdu
      - git
      - screen
      - tmux
      - sudo
      - unzip
      - moreutils # vipe (insert editor in pipe), chronic (run command quietly unless it fails)
      - jq
      - psmisc
      - kexec-tools
      - patch

- name: Install additional tools
  package:
    name: "{{ basic_setup_additional_tools }}"
  when: basic_setup_additional_tools is defined

- name: Install debian/ubuntu-specific packages
  package:
    name:
      - unp
      - mtr-tiny # better traceroute + ping
      - p7zip-full # used for unp of 7z files
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install fedora-specific packages
  package:
    name:
      - mtr # better traceroute + ping
      - p7zip #used for unp of 7z files
  when: ansible_distribution == 'Fedora'

- name: Remove /etc/profile.d/ customization script
  file:
    path: /etc/profile.d/ZZ-shell-customization.sh
    state: absent

- name: Bash customization (debian/ubuntu)
  lineinfile:
    dest: "{{ item }}"
    line: ". /etc/sh-customization.common"
  with_items:
    - /etc/bashrc
    - /etc/bash.bashrc
    - /etc/zshrc
  register: result
  failed_when: result.failed and not result.msg is match("Destination .* does not exist")

- name: Install /etc/sh-customization.common
  copy:
    src: "{{ item }}"
    dest: /etc/
  with_items:
    - sh-customization.common
    - sh-customization.bash
    - sh-customization.zsh

- name: Add hcmnt binary
  copy: src=hcmnt dest=/usr/local/bin/hcmnt owner=root group=root mode=755

- name: Add wgetrc
  copy: src=wgetrc dest=/etc/wgetrc owner=root group=root mode=755

- name: Add vimrc (ubuntu/debian)
  copy: src=vimrc dest=/etc/vim/vimrc.local owner=root group=root mode=755
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Add vimrc (fedora)
  copy: src=vimrc dest=/etc/vimrc.local owner=root group=root mode=755
  when: ansible_distribution == 'Fedora'

- name: Create vi->vim link (fedora)
  file:
    src: /usr/bin/vim
    dest: /usr/bin/vi
    state: link
    force: yes
  when: ansible_distribution == 'Fedora'

- name: Find all .bashrc files
  shell: 'find /root/ -maxdepth 1 -name .bashrc; find /home -maxdepth 2 -name .bashrc'
  register: bashrc_files
  changed_when: False
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Find unchanged .bashrc files
  shell: "cmp --quiet {{ item }} /etc/skel/.bashrc && echo {}"
  with_items: "{{ bashrc_files.stdout_lines }}"
  failed_when: False
  changed_when: False
  register: bashrc_files_change_test
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- debug:
    msg: "{{ item.item }} has been changed, ignoring!"
  with_items: "{{ bashrc_files_change_test.results | rejectattr('rc', 'equalto', 0) | list }}"
  loop_control:
    label: "{{ item.item }}"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Copy bashrc-skel
  copy:
    src: debian-skel-bashrc
    dest: "{{ item.item }}"
  with_items: "{{ bashrc_files_change_test.results | selectattr('rc', 'equalto', 0) | list }}"
  loop_control:
    label: "{{ item.item }}"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Copy debian-skel-bashrc to /etc/skel
  copy:
    src: debian-skel-bashrc
    dest: /etc/skel/.bashrc
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Check if /usr/share/base-files/dot.bashrc and /root/.bashrc are the same
  command: cmp --silent /usr/share/base-files/dot.bashrc /root/.bashrc
  register: root_bashrc_result
  changed_when: False
  failed_when: root_bashrc_result.rc > 1
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Copy /etc/skel/.bashrc to /etc/
  copy:
    src: debian-skel-bashrc
    dest: /root/.bashrc
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' and
        root_bashrc_result is defined and root_bashrc_result.rc == 0

- name: Generate en_US.UTF-8 locale (default)
  locale_gen: name=en_US.UTF-8 state=present
  failed_when: False
  tags: locale

- name: Generate de_DE.UTF-8 locale (default)
  locale_gen: name=de_DE.UTF-8 state=present
  failed_when: False
  tags: locale

# Generate locales manually if locale_gen didn't work due to this bug:
# https://github.com/ansible/ansible-modules-extras/issues/425
- name: Generate en_US.UTF-8 locale (alternative)
  shell: locale -a |grep en_US.utf8 || locale-gen en_US.UTF-8
  register: common_generate_en_us_locale_result
  changed_when: >
    "Generating" in common_generate_en_us_locale_result.stdout
  failed_when: >
    not common_generate_en_us_locale_result.stdout | lower is regex("en_us.utf-?8")
  tags: locale

- name: Generate de_DE.UTF-8 locale (alternative)
  shell: locale -a |grep de_DE.utf8 || locale-gen de_DE.UTF-8
  register: common_generate_de_de_locale_result
  changed_when: >
     "Generating" in common_generate_de_de_locale_result.stdout
  failed_when: >
    not common_generate_de_de_locale_result.stdout | lower is regex("de_de.utf-?8")
  tags: locale

